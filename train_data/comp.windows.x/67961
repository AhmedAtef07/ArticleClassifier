maximize
performance
monthly
posting
compiled
art
mulder
art
ualberta
ram
faster
cpu
disk
space
faster
ethernet
standard
responses
hear
ask
improve
performance
workstation
well
hardware
isn
always
option
wonder
hardware
always
necessity
faq
list
collection
suggestions
ideas
different
people
best
possible
performance
windows
workstation
without
purchasing
hardware
performance
highly
subjective
issue
individual
user
balance
speed
versus
features
order
come
personal
decision
therefore
document
expected
contain
subjective
opinions
amongst
objective
facts
document
specifically
concerned
course
factors
affect
performance
workstation
outside
scope
document
people
seriously
interested
whole
area
system
performance
want
look
reilly
nutshell
handbook
system
performance
tuning
mike
loukides
imho
contains
well
written
comprehensive
treatment
system
performance
unaware
similar
books
table
contents
introduction
administrivia
faq
window
managers
server
server
locking
server
ram
starting
server
fonts
resources
file
define
display
properly
clients
better
clock
better
terminal
emulator
tuning
client
miscellaneous
suggestions
pretty
pictures
quicker
mouse
programming
thoughts
sources
information
author
notes
changed
last
issue
new
last
issue
introduction
administrivia
document
posted
each
month
around
15th
usenet
news
groups
comp
windows
news
answers
comp
answers
reading
copy
faq
few
months
old
see
last
modified
above
probably
locate
latest
edition
information
outdated
know
those
site
receive
article
already
expired
retrieve
faq
archive
site
exist
several
usenet
faq
archive
sites
find
access
please
see
introduction
news
answers
newsgroup
posting
news
answers
main
faq
archive
rtfm
mit
document
found
pub
usenet
news
answers
faq
speedups
access
anonymous
ftp
retrieve
sending
mail
mail
server
rtfm
mit
command
send
usenet
news
answers
faq
speedups
body
faq
david
lewis
faq
craft
uunet
maintains
informative
well
written
comp
windows
frequently
asked
questions
document
focus
general
information
faq
concentrates
performance
comp
windows
faq
address
issue
speed
regards
server
gist
topic
seems
use
x11r5
faster
please
see
faq
complete
details
window
managers
lot
window
managers
lots
different
features
abilities
choice
use
necessity
balancing
act
between
performance
useful
features
point
respondents
agreed
upon
twm
best
candidate
speedy
window
manager
couple
generic
tricks
try
soup
window
manger
turning
unnecessary
things
zooming
opaque
move
lay
windows
tiled
manner
reduce
amount
cpu
power
spent
raising
lowering
overlapping
windows
joe
english
joe
trystero
art
found
good
font
tiling
7x13
aka
misc
fixed
medium
normal
iso8859
biggest
font
know
use
sun
1152x900
screen
still
column
terminal
windows
side
side
display
overlap
font
suggestions
accepted
server
server
make
sure
server
proper
match
hardware
monochrome
monitor
use
monochrome
x11
server
monochrome
sun
haven
noticed
difference
between
xsun
colour
server
xsunmono
pointed
xsunmono
800k
smaller
therefore
contribute
less
paging
thanks
jonny
farringdon
farringdon
psychol
ucl
michael
salmon
michael
salmon
eos
ericsson
server
compiled
make
difference
jeff
law
law
schirf
utah
advises
sun
system
compiled
gcc
version
unbundled
sun
compiler
expect
large
speedups
server
using
bundled
sunos
compiler
assume
similar
results
occur
used
high
quality
commercial
compilers
market
locking
server
ram
anyone
tried
hacking
server
locked
ram
paged
via
call
plock
help
performance
inquiry
topic
few
pointers
plock
function
call
hard
evidence
someone
tried
position
give
try
thanks
eric
claeys
ecc
eperm
att
danny
backx
sunbim
juan
martin
juando
cnm
starting
server
joe
english
joe
trystero
art
start
lot
clients
xsession
whatever
sleep
second
launching
each
changed
xclients
script
logging
actually
took
less
time
heavily
loaded
system
without
core
though
sounds
crazy
confirmed
works
warner
losh
imp
solbourne
provided
good
explanation
works
summarized
here
start
server
takes
huge
amount
time
start
accepting
connections
lot
initialization
done
server
starts
process
touches
large
number
pages
process
running
same
time
fight
server
use
cpu
importantly
memory
put
sleep
give
server
chance
itself
sorted
before
clients
start
similarly
lot
initialization
whenever
client
program
starts
toolkits
registering
widgets
resources
being
fetched
programs
initializing
state
databases
forth
activity
typically
memory
intensive
once
initialization
done
process
reached
steady
state
memory
usage
typically
settles
down
using
few
pages
using
sleeps
stagger
launching
clients
xinitrc
avoid
fighting
each
workstation
limited
resources
definitely
mileage
vary
situation
variables
considered
available
ram
local
swap
space
load
average
number
users
system
clients
starting
etc
currently
xinitrc
situation
sleep
exec
xclock
sleep
exec
xbiff
sleep
exec
xterm
sleep
exec
xterm
experimented
sleep
exec
xclock
sleep
exec
xbiff
sleep
exec
xterm
sleep
exec
xterm
tried
sleep
exec
start_x_clients_script
start_x_clients_script
sleep
exec
xclock
sleep
exec
xbiff
sleep
exec
xterm
sleep
exec
xterm
idea
last
make
sure
xinit
completely
finished
processing
xinitrc
settled
down
steady
state
before
sleep
expired
clients
launched
yielded
fairly
comparable
results
stuck
current
setup
simplicity
probably
experiment
bit
find
setup
suits
fonts
loading
fonts
takes
time
ram
minimize
number
fonts
applications
use
speed
increases
load
time
simple
strategy
choose
small
number
fonts
small
large
roman
whatever
suits
configure
clients
heavily
used
clients
use
those
few
fonts
client
programs
start
quicker
font
already
loaded
server
conserve
server
resources
fewer
fonts
loaded
server
farrell
mckay
fbm
ptcburp
ptcbu
joe
english
joe
trystero
art
main
xterm
font
7x13
twm
set
use
7x13
menus
icons
etc
twm
default
font
8x13
normally
use
8x13
eliminated
font
server
oliver
jones
roadrunner
pictel
keep
fonts
local
workstation
loading
over
nfs
make
extensive
use
scalable
fonts
use
font
server
resources
file
keep
xresources
xdefaults
file
small
saves
ram
saves
server
startup
time
joe
english
joe
trystero
art
suggestion
xdefaults
xresources
file
try
putting
minimum
number
resources
want
available
applications
example
reversevideo
true
separate
resources
individual
client
specific
resource
files
example
home
lib
app
defaults
login
file
set
environment
variable
xuserfilesearchpath
setenv
xuserfilesearchpath
home
lib
app
defaults
comp
windows
frequently
asked
questions
faq
contains
excellent
explanation
environment
variables
work
xterm
launches
loads
resources
app
defaults
xterm
xdvi
finds
app
defaults
xdvi
forth
note
clients
follow
same
xxxxx
resource
file
naming
pattern
check
system
app
defaults
directory
usr
x11r5
lib
x11
app
defaults
find
proper
name
name
personal
resource
files
same
name
documented
specification
thanks
kevin
samborn
samborn
mtkgc
michael
urban
urban
cobra
jpl
nasa
mike
long
mikel
cornell
kevin
willing
mail
setup
files
inquirers
method
organizing
personal
resources
following
benefits
easier
maintain
usable
fewer
resources
stored
server
resource_manager
property
side
benefit
server
start
fractionally
quicker
doesn
load
resources
applications
process
resources
never
sort
through
resources
find
ones
affect
drawbacks
application
interested
load
additional
file
time
starts
doesn
seem
make
performance
difference
consider
huge
boon
usability
modifying
application
resource
database
need
run
application
without
having
xrdb
again
xrdb
default
run
xdefaults
file
through
cpp
resources
split
multiple
resource
files
loaded
individual
client
programs
watch
style
comments
xdefaults
file
cpp
stripped
switched
method
distributed
resource
files
spent
several
frustrating
days
trying
figure
clients
finding
resources
provide
error
encountered
style
comments
resource
files
simply
silently
aborted
processing
resource
file
loss
preprocessing
handy
ifdef
color
enough
cause
people
dismiss
method
resource
management
run
clients
break
rules
example
emacs
xvt
find
resources
anywhere
xdefaults
starting
client
machine
share
files
machine
resources
stored
client
find
resources
loading
resources
server
guarantee
clients
always
find
resources
casey
leedom
casey
gauss
llnl
possible
compromise
suggestion
planning
trying
put
resources
heavily
used
clients
xterm
xdefaults
file
use
separate
resources
files
method
clients
seldom
use
define
display
properly
client
programs
executed
same
machine
server
situation
setting
display
environment
variable
hostname
hostname
name
workstation
set
display
variable
unix
doing
access
optimized
routines
know
server
same
machine
use
shared
memory
method
transferring
requests
thanks
patrick
horgan
pjh70
ras
amdahl
see
_display
names_
section
man
page
further
explanation
properly
set
display
name
think
stock
mit
data
general
libraries
smart
enough
use
local
communication
display
isn
set
specially
rob
sartin
88opensi
sartin
uunet
jody
goldberg
jody
algorithmics
sent
xlib
patch
change
stock
use
local
communication
display
properly
set
want
business
distributing
trying
juggle
non
mit
patches
elected
include
here
hopefully
mit
apply
minor
patch
themselves
meantime
want
try
yourself
email
jody
clients
few
megabytes
ram
think
carefully
number
programs
running
think
_kind_
programs
running
example
smaller
clock
program
xclock
unfortunately
haven
really
noticed
programs
advertise
large
onus
research
spread
word
suggestions
better
alternatives
standard
clients
xclock
xterm
xbiff
welcome
received
contradictory
advice
people
client
programs
advocate
use
programs
strictly
xlib
based
xaw
toolkits
large
others
warn
applications
using
already
loaded
shared
libraries
case
using
non
example
client
program
actually
_increase_
amount
ram
consumed
upshot
seems
mix
toolkits
try
use
athena
clients
xview
clients
motif
clients
etc
use
dragging
toolkit
library
know
environment
think
carefully
client
programs
work
best
together
environment
thanks
rob
sartin
88opensi
sartin
uunet
duncan
sinclair
sinclair
dcs
gla
sinclair
gla
dcs
better
clock
xcuckoo
suggested
duncan
sinclair
sinclair
dcs
gla
available
export
lcs
mit
xcuckoo
displays
clock
title
bar
another
program
saves
screen
real
estate
mclock
suggested
der
mouse
mouse
lightning
mcrcim
mcgill
available
larry
mcrcim
mcgill
mclock
shar
non
based
extensively
configurable
made
look
mit
oclock
mostly
xclock
purely
changing
resources
course
ultimate
clock
consumes
resources
takes
screen
real
estate
hangs
wall
better
terminal
emulator
readme
file
distributed
xterm
abandon
hope
enter
here
undoubtedly
ugly
program
distribution
ugly
maybe
site
still
used
suspect
xterm
used
clients
sites
laziness
isn
better
terminal
emulator
available
see
below
use
xterm
try
reducing
number
savelines
reduce
memory
usage
oliver
jones
roadrunner
pictel
jonny
farringdon
farringdon
psychol
ucl
xvt
suggested
richard
hesketh
rlh2
ukc
available
export
lcs
mit
contrib
xvt
tar
need
esoteric
features
xterm
hold
xvt
written
here
save
swap
space
xterm
hog
written
partial
clone
xterm
rename
resources
xvt
pretends
xterm
current
version
bind
keys
xterm
heard
versions
xvt
feature
found
update
march
recently
few
email
conversations
brian
warkentin
brian
warkentine
sun
regarding
xvt
questions
whether
xvt
really
faster
xterm
instance
xvt
initialize
slightly
faster
compare
scrolling
speed
try
quickie
benchmark
bin
time
etc
termcap
see
program
scroll
faster
xterm
slightly
larger
ram
requirements
hard
numbers
here
anyone
shared
libraries
shared
text
segments
mean
xterm
paging
requirements
major
experiment
ripped
tek
stuff
xterm
made
little
difference
never
use
never
gets
brought
memory
here
stand
conflicting
reports
validity
xvt
over
xterm
summary
caveat
emptor
mileage
vary
provide
hard
data
see
specifically
ram
each
occupies
swap
each
needs
relative
speed
each
mterm
suggested
der
mouse
mouse
lightning
mcrcim
mcgill
available
larry
mcrcim
mcgill
mterm
src
mterm
ball
wax
terminal
emulator
major
lack
scrollback
people
anyway
tuning
client
suggestions
tune
client
programs
work
faster
scott
barman
scott
asd
comes
suggestion
regarding
motif
text
field
widgets
noticed
during
data
entry
motif
text
field
widgets
getting
slight
lag
response
keystrokes
particularly
initial
field
examining
going
xscope
found
seems
resource
xmnblinkrate
non
zero
focus
text
field
widget
text
widget
beam
cursor
blink
time
cursor
appears
disappears
those
widgets
widget
code
making
request
server
copyarea
user
stop
setting
resource
xmnblinkrate
noticeable
40mhz
sparc
make
little
difference
slower
system
specific
suggestion
probably
applied
general
lots
areas
consider
heavily
used
clients
minor
embellishments
turned
thereby
save
server
requests
miscellaneous
suggestions
pretty
pictures
use
large
bitmaps
gif
etc
root
window
backgrounds
complicated
root
window
bitmap
slower
server
redrawing
screen
reposition
windows
redraw
etc
take
ram
cpu
power
work
sun
sparc
conscious
performance
issues
comprehend
see
people
4mb
sun
running
xphoon
root
window
someone
figure
ram
occupied
having
full
screen
root
image
colour
workstation
anything
need
screen
real
estate
clients
rarely
see
root
window
anyway
thanks
qiang
alex
zhao
azhao
arizona
reminding
quicker
mouse
using
xset
adjust
fast
pointer
moves
screen
move
mouse
use
xset
xinitrc
file
lets
send
pointer
screen
flick
wrist
see
xset
man
page
further
ideas
information
hint
sometimes
want
slow
down
mouse
tracking
fine
work
cover
options
placed
number
different
mouse
setting
commands
menu
window
manager
twm
menu
mouse
settings
mouse
settings
title
fast
xset
normal
fast
xset
system
default
accelerated
xset
default
glacial
xset
programming
thoughts
joe
english
joe
trystero
art
speed
applications
developing
tons
things
stick
motif
programs
set
xmfontlist
resources
individual
buttons
labels
lists
use
defaultfontlist
labelfontlist
whatever
resource
highest
level
manager
widget
again
stick
few
fonts
possible
better
use
motif
absolute
pig
create
destroy
widgets
fly
try
reuse
avoid
problems
buggy
toolkits
use
line
width
gcs
servers
makes
huge
difference
compress
collapse
multiple
expose
events
make
difference
between
fast
application
completely
unusable
francois
staes
frans
kiwi
uia
small
remark
once
heard
using
better
malloc
function
greatly
increase
performance
based
applications
use
malloc
heavily
suggested
trying
gnuy
malloc
didn
find
time
tests
small
programs
doing
malloc
free
differences
indeed
noticeable
somewhat
times
faster
confirmation
anyone
andre
beck
andre_beck
irs
inf
dresden
unnecessary
noexpose
events
people
use
xcopyarea
xcopyplane
fastest
blit
routines
forget
reset
graphics_exposures
used
blits
cause
noexpose
event
blit
cases
puts
load
onto
connection
forces
client
run
through
event
loop
again
again
thousands
xchangegc
requests
gfx
context
switching
seen
handcoded
apps
few
gcs
created
heavily
changed
again
again
uses
definitely
better
mechanism
caching
sharing
lot
gcs
needed
parameters
remove
load
subsequent
xchangegc
requests
connection
moving
toward
client
startup
phase
contributors
proposed
ideas
seem
right
wall
first
david
lewis
day
dbl
osf
night
david
craft
uunet
swap
displays
someone
run
programs
machine
display
locally
user
runs
machine
onto
display
goal
reduce
context
switches
same
operation
between
client
server
situation
easily
try
received
following
confirmation
michael
salmon
michael
salmon
eos
ericsson
regularly
run
programs
machines
notice
big
difference
try
run
machine
reduce
usage
usually
nice
reduce
impact
intrusion
helps
lot
poor
little
ss1
essential
casey
leedom
casey
gauss
llnl
x11
server
client
competing
same
cpu
server
run
same
machine
really
major
problem
except
x11
client
server
absolute
synchronicity
context
thrashing
timothy
panton
thp
westhawk
uucp
firstly
relies
fact
cpu
mostly
idle
cpu
usage
bursty
chances
teammate
doing
something
cpu
intensive
same
time
small
twice
cpu
memory
available
action
second
factor
context
switches
expensive
using
cpu
halves
pay
price
due
overhead
going
over
network
offset
cases
improved
buffering
network
typically
20k
pipe
allowing
fewer
context
switches
sources
information
volume
reilly
window
system
series
window
system
administrator
guide
book
administrator
read
adrian
nye
adrian
ora
lot
tips
performance
paper
improving
application
performance
chris
peterson
sharon
chang
issue
resource
earlier
version
paper
appeared
xhibition
conference
proceedings
paper
absolutely
essential
reading
programmers
author
notes
list
currently
maintained
art
mulder
art
ualberta
suggestions
corrections
submission
inclusion
list
gladly
accepted
layout
suggestions
comments
spelling
mistak
welcome
currently
listed
contributors
various
comments
suggestions
want
credited
please
tell
speedup
faq
copyright
arthur
mulder
copy
document
whole
part
long
art
mulder
art
ualberta
conformed
world
department
computing
science
transformed
renewal
alberta
edmonton
canada
mind
romans
