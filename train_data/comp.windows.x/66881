trying
figure
current
toolkit
directions
simply
know
toolkit
bet
use
new
long
term
project
same
problem
looked
motif
wwl
interviews
gina
few
variations
above
done
cursory
examination
rogue
wave
view
view
abstractions
best
toolkits
mentioned
resulting
code
looks
little
motif
little
confidence
software
catch
otherwise
result
significant
longevity
code
gina
allows
write
code
looks
great
deal
motif
makes
interesting
use
inheritance
resulting
code
motif
certainly
significantly
less
verbose
equivalent
code
interviews
looks
promising
haven
found
free
version
motif
support
confident
widely
interviews
motif
support
adopted
specific
motif
support
available
over
time
libraries
produce
code
less
motif
make
sufficient
use
features
simplify
coding
task
point
inclination
write
motif
manipulation
routines
invoke
those
routines
code
using
simple
abstractions
suited
specific
task
later
osf
credible
standards
setting
body
comes
interface
motif
change
goo
write
choice
interfaces
leaves
code
leaves
tied
abstraction
consistent
industry
directions
better
take
standard
inferior
solution
slgihtly
superior
approach
leave
both
useless
code
useless
skills
few
years
views
library
consider
right
environment
end
spending
nearly
use
justify
cause
short
term
productivity
decreases
learn
new
abstraction
unlikely
sufficiently
long
lived
solution
reap
benefits
high
end
curve
brad
brad
daniels
money
buy
happiness
daniels
neosoft
guess
rent
work
neosoft
weird
yenkovic
speak
employer
