float
resources
portable
size
value
larger
size
xtpointer
try
using
pointer
float
instead
xaw
scrollbar
float
resources
handled
way
yes
unofficial
fix
x11r4
destroy
destroy
thu
jul
lib
destroy
thu
jul
xconsortium
destroy
swick
exp
plus
unofficial
patches
revisions
copyright
digital
equipment
corporation
maynard
massachusetts
int
destroyrec
app
destroy_list
app
destroy_count
dispatch_level
dispatch_level
widget
widget
app
destroy_count
bcopy
char
char
app
destroy_count
sizeof
destroyrec
xtphase2destroy
int
destroyrec
app
destroy_count
xtphase2destroy
result
calls
xtdestroywidget
cause
app
destroy_list
reallocated
app
destroy_list
dispatch_level
dispatch_level
widget
widget
app
destroy_count
bcopy
char
char
app
destroy_count
sizeof
destroyrec
xtphase2destroy
donna
converse
converse
expo
lcs
mit
although
books
demonstrate
current
implementation
happens
call
callback
procedures
order
registered
specification
guarantee
sequence
supplemental
authoritative
documents
asente
swick
volume
order
undefined
callback
list
manipulated
both
widget
application
guarantee
order
execution
general
callback
procedures
thought
operating
independently
another
depend
side
effects
callbacks
operating
seqence
needed
single
callback
registered
explicitly
call
functions
necessary
thanks
converse
expo
lcs
mit
xtdestroywidget
operates
passes
order
avoid
leaving
dangling
data
structures
function
call
marks
widget
actually
destroyed
until
program
returns
event
loop
possible
code
looks
trivial
callback
clear
flow
control
calls
askuser
block
until
answer
set
valid
values
yes
answer
code
drops
callback
back
event
processing
loop
void
quit
widget
xtpointer
client
xtpointer
call
int
answer
answer
askuser
really
quit
ret_yes
answer
answer
askuser
really
positive
ret_yes
answer
exit
realistic
example
ask
whether
create
file
whether
overwrite
accomplished
entering
second
event
processing
loop
waiting
until
user
answers
question
answer
returned
calling
function
function
askuser
looks
something
motif
replaced
widget
set
specific
code
create
sort
dialog
box
displaying
question
string
buttons
cancel
help
equivalents
int
askuser
string
widget
char
string
int
answer
ret_none
used
marker
widget
dialog
cache
carry
arg
args
int
xtappcontext
context
xtsetarg
args
xmnmessagestring
xmstringcreateltor
string
xmstring_default_charset
xtsetarg
args
xmndialogstyle
xmdialog_application_modal
dialog
xmcreatequestiondialog
xtparent
string
args
xtaddcallback
dialog
xmnokcallback
response
answer
xtaddcallback
dialog
xmncancelcallback
response
answer
xtaddcallback
dialog
xmnhelpcallback
response
answer
xtmanagechild
dialog
context
xtwidgettoapplicationcontext
answer
ret_none
xtapppending
context
xtappprocessevent
context
xtimall
xtdestroywidget
dialog
blow
away
dialog
box
shell
return
answer
dialog
supports
three
buttons
set
call
same
function
tickled
user
variable
answer
set
user
finally
selects
those
choices
void
response
client
call
widget
xtpointer
client
xtpointer
call
int
answer
int
client
xmanycallbackstruct
reason
xmanycallbackstruct
call
switch
reason
reason
case
xmcr_ok
answer
ret_yes
define
value
break
case
xmcr_cancel
answer
ret_no
break
case
xmcr_help
answer
ret_help
break
default
return
code
unwraps
back
point
answer
needed
continues
thanks
dan
heller
argv
sun
further
code
dan
contrib
widgetwrap
library
widget
need
know
name
widget
users
later
best
using
xtname
function
work
both
widgets
non
widget
objects
still
using
use
simple
bit
code
want
note
depends
widget
internal
data
structures
necessarily
portable
future
versions
including
include
x11
corep
include
x11
xresource
string
xtname
widget
widget
widget
work
non
widget
objects
return
xrmnametostring
widget
core
xrm_name
modified
suggestion
larry
rogers
larry
boris
webo
doing
order
window
xlib
graphics
within
based
program
canvas
xtcreatemanagedwidget
widgetclass
drawing
area
window
xtwindow
canvas
window
associated
widget
xdrawline
window
produces
error
window
associated
widget
created
part
realization
widget
using
window
null
window
create
error
describe
necessary
call
xtrealizewidget
before
attempting
use
window
associated
widget
note
window
created
xtrealizewidget
call
server
actually
mapped
wait
expose
event
window
before
drawing
badmatch
error
occur
specified
rectangle
goes
edge
screen
want
catch
error
deal
take
make
pixmap
same
size
rectangle
want
capture
clear
pixmap
background
using
xfillrectangle
use
xcopyarea
copy
window
pixmap
noexpose
event
copy
clean
use
xgetimage
grab
image
pixmap
graphicsexpose
events
copy
wasn
clean
width
height
members
graphicsexpose
event
structures
tell
parts
pixmap
aren
good
rid
pixmap
probably
takes
lot
memory
thanks
oliver
jones
pictel
number
programs
offer
modes
otherwise
run
straight
character
mode
easiest
way
application
determine
running
display
attempt
open
connection
server
display
xopendisplay
display_name
display
stuff
curses
something
display_name
string
specified
command
line
following
display
convention
otherwise
char
null
case
xopendisplay
uses
value
display
set
superior
simply
checking
existence
display
command
line
argument
checking
display
set
environment
adequate
necessary
call
xdefinecursor
window
application
easiest
thing
create
single
inputonly
window
large
largest
possible
screen
make
child
toplevel
window
clipped
window
won
affect
application
needs
big
largest
possible
screen
case
user
enlarges
window
busy
moves
elsewhere
within
virtual
desktop
substitute
toplevel
top
widget
here
similar
code
work
xlib
applications
use
top
window
unsigned
long
valuemask
xsetwindowattributes
attributes
ignore
device
events
busy
cursor
displayed
valuemask
cwdontpropagate
cwcursor
attributes
do_not_propagate_mask
keypressmask
keyreleasemask
buttonpressmask
buttonreleasemask
pointermotionmask
attributes
cursor
xcreatefontcursor
xtdisplay
toplevel
xc_watch
window
big
display
screen
clipped
parent
window
never
worry
resizing
xcreatewindow
xtdisplay
toplevel
xtwindow
toplevel
unsigned
int
inputonly
copyfromparent
valuemask
attributes
maximum
size
above
replaced
real
size
screen
particularly
avoid
servers
problems
windows
larger
want
use
busy
cursor
map
raise
window
back
normal
unmap
automatically
keep
getting
extra
mouse
events
depending
precisely
window
manager
works
similar
effect
keystrokes
well
addition
note
xaw
widgets
support
xtncursor
resource
temporarily
reset
merely
wish
change
cursor
without
blocking
pointer
events
thanks
andrew
wason
cellar
bae
bellcore
dan
heller
argv
sun
mouse
larry
mcrcim
mcgill
based
application
spawns
unix
processes
continue
run
closed
typically
vanish
until
children
terminated
children
inherit
parent
open
connection
display
need
fork
immediately
child
process
close
connectionnumber
xtdisplay
widget
close
file
descriptor
display
information
exec
exit
parent
alternatively
before
exec
ing
make
call
causes
file
descriptor
closed
exec
void
fcntl
connectionnumber
xdisplay
f_setfd
thanks
janet
anstett
anstettj
tramp
colorado
gordon
freedman
gjf00
duts
ccc
amdahl
greg
holmberg
holmberg
frame
xlib
mutual
exclusion
protecting
critical
sections
signal
handler
makes
call
wrong
time
function
calling
already
executing
leave
library
inconsistent
state
note
ansi
standard
points
behavior
signal
handler
undefined
signal
handler
calls
function
signal
itself
problem
specific
xlib
posix
specification
mentions
functions
called
safely
assumed
functions
called
xlib
functions
work
around
problem
setting
flag
interrupt
handler
later
checking
work
procedure
timer
event
previously
added
note
article
journal
example
reilly
volume
error
thanks
pete
ware
ware
cis
ohio
state
donna
converse
converse
expo
lcs
mit
see
errors
issue
xlib
requests
xlib
error
handler
make
calls
generate
requests
xlib
signal
handler
shouldn
doing
case
common
need
write
program
accept
input
both
user
via
connection
file
descriptor
operates
efficiently
without
blocking
connection
file
descriptor
solution
use
xtappaddinput
open
file
descriptor
use
xtappaddinput
register
input
handler
input
handler
called
time
something
file
descriptor
requiring
program
attention
write
input
handler
callback
work
quickly
returns
important
use
non
blocking
system
calls
input
handlers
input
handlers
read
file
descriptor
although
input
handler
write
handle
exception
conditions
wish
careful
register
input
handler
read
disk
file
find
function
called
isn
input
pending
xtappaddinput
actually
working
supposed
input
handler
called
whenever
file
descriptor
ready
read
new
data
read
disk
file
unlike
pipe
socket
always
ready
read
spin
back
beginning
read
data
read
before
result
function
always
called
time
around
xtappmainloop
way
type
interaction
expecting
add
line
beginning
function
test
whether
new
data
ioctl
fionread
return
called
frequently
application
effectively
busy
wait
better
using
xtappaddinput
instead
setting
timer
timer
procedure
checking
file
input
courtesy
dan
heller
argv
ora
mouse
larry
mcrcim
mcgill
ollie
jones
pictel
using
xsendevent
setting
window
field
event
needs
order
match
widget
receive
event
sending
events
application
use
xtdispatchevent
instead
efficient
xsendevent
avoid
round
trip
server
depending
well
widget
written
call
action
procedures
order
effects
want
courtesy
mark
horstman
mh2620
sarek
sbc
the_window
xcreatesimplewindow
the_display
root_window
size_hints
size_hints
size_hints
width
size_hints
height
border_width
blackpixel
the_display
the_screen
whitepixel
the_display
the_screen
xselectinput
the_display
the_window
exposuremask
buttonpressmask
buttonreleasemask
xmapwindow
the_display
the_window
xdrawline
the_display
the_window
the_gc
right
map
window
before
drawing
window
ready
drawn
until
actually
appears
screen
until
application
receives
expose
event
drawing
done
before
generally
appear
see
code
programs
code
appear
window
created
mapped
done
xnextevent
the_display
the_event
switch
the_event
type
case
expose
expose
events
redraw
xdrawline
the_display
the_window
the_gc
break
note
second
problem
xlib
implementations
set
default
graphics
context
correct
foreground
background
colors
program
previously
include
code
the_gc_values
foreground
blackpixel
the_display
the_screen
the_gc_values
background
whitepixel
the_display
the_screen
the_gc
xcreategc
the_display
the_window
gcforeground
gcbackground
the_gc_values
note
code
uses
blackpixel
whitepixel
avoid
assuming
black
white
vice
versa
relationship
between
pixels
colors
black
white
implementation
dependent
reversed
correspond
black
white
note
actually
using
blackpixel
whitepixel
usually
wrong
thing
finished
program
ignores
user
preference
foreground
background
note
run
same
situation
based
program
draw
xtwindow
right
realized
appeared
screen
xlib
structure
includes
information
monitors
virtual
monitors
single
display
supports
server
support
several
independent
screens
numbered
unix
unix
unix
etc
screen
screen_number
second
digit
thought
index
array
available
screens
particular
display
connection
macros
use
obtain
information
particular
screen
application
running
typically
forms
takes
screen
takes
both
display
screen_number
based
programs
typically
use
xtscreen
widget
determine
screen
application
running
uses
single
screen
part
confusion
arise
fact
macros
return
characteristics
screen
display
names
xdisplaywidth
xdisplayheight
etc
x11r4
header
files
compatible
motif
header
files
usable
inside
extern
definition
string
intrinsic
conflict
libg
string
class
needs
worked
around
projects
help
wwl
set
classes
jean
daniel
fekete
wrap
toolkit
widgets
available
via
anonymous
ftp
export
lcs
mit
contrib
wwl
tar
lri
lri
pub
wwl
tar
works
building
set
classes
parallel
class
tree
widgets
interviews
toolkit
obtainable
via
anonymous
ftp
interviews
stanford
interviews
uses
box
glue
model
similar
tex
constructing
user
interfaces
supports
multiple
looks
user
interfaces
sample
applications
include
wysiwig
document
editor
doc
macdraw
drawing
program
idraw
interface
builder
ibuild
things
class
library
written
rome
air
force
base
strategic
air
command
available
freeware
archive
sites
motif
public
domain
library
defines
class
wrappers
motif
adds
application
class
initializing
integrates
wcl
xbae
widget
set
work
developed
ronald
van
loon
rvloon
ruu
based
set
bindings
done
lowell
graphics
research
laboratory
current
sources
available
decuac
dec
pub
x11
motif
jul
tar
source
code
examples
doug
young
object
oriented
programming
osf
motif
isbn
include
widget
wrappers
include
set
classes
encapsulates
higher
level
facilities
commonly
needed
motif
based
applications
check
export
ftp
contrib
young
tar
rogue
wave
offers
view
programmers
using
motif
info
product
called
commonview
glockenspiel
ltd
ireland
apparently
based
toolkit
multiple
window
systems
including
windows
motif
sold
qualix
fax
implements
interface
gil
files
sun
openwindows
developers
guide
produces
xview
wrapper
classes
uit
set
classes
embedding
xview
toolkit
intended
use
sun
openwindows
developers
guide
builder
tool
sources
export
mit
uit
tar
version
released
use
objectcenter
saber
reasonable
alternative
above
parcplace
formerly
solbourne
object
interface
thanks
douglas
rand
dsrand
mitre
george
gwu
tcs
versions
clx
lisp
bindings
part
x11
core
source
distributions
version
clx
tape
version
export
lcs
mit
contrib
clx
tar
saic
ada
x11
bindings
through
anonymous
ftp
pub
stars
rosslyn
unisys
ada
study
team
sponsored
nasa
jsc
apparently
working
bindings
information
xada
ghg
hou
gnu
smalltalk
beta
native
smalltalk
binding
called
stix
steven
byrne
sun
still
beginning
stages
documentation
sparse
outside
smalltalk
code
itself
sources
available
pub
gnu
smalltalk
tar
prep
mit
ugle
unit
prolog
bindings
called
xwip
written
ted
kim
ucla
supported
part
darpa
available
anonymous
ftp
export
lcs
mit
contrib
xwip
tar
ftp
ucla
pub
xwip
tar
prolog
language
bindings
depend
having
quintus
type
foreign
function
interface
prolog
developer
gotten
work
quintus
sicstus
prolog
inquiries
xwip
ucla
scheme
bindings
xlib
osf
motif
xaw
part
elk
distribution
version
export
obsoletes
version
contrib
tape
scm
bolt
accessory
aubrey
jaffer
scm
scheme
interpreter
provides
interface
xlib
motif
openlook
available
via
ftp
altdorf
mit
archive
scm
xscm1
tar
nexus
yorku
pub
scheme
new
xscm1
tar
ada
bindings
motif
explicitly
eventually
made
available
jet
propulsion
laboratories
probably
through
normal
electronic
means
advance
information
obtained
dsouleles
dsfvax
jpl
nasa
respond
time
permits
adamotif
complete
binding
motif
ada
language
common
systems
based
part
upon
saic
unisys
bindings
includes
uil
ada
translator
info
systems
engineering
research
corporation
ada
serc
well
serc
apple
mit
consortium
although
involved
producing
ada
bindings
maintains
partial
listing
people
involved
ada
information
available
donna
converse
converse
expo
lcs
mit
once
set
background
pixel
pixmap
window
read
clients
reason
client
create
pixmap
set
background
pixmap
window
free
pixmap
window
keeps
background
pixmap
itself
destroyed
sure
window
background
pixel
pixmap
use
xcleararea
clear
region
background
color
use
xgetimage
read
back
pixel
action
alters
contents
window
suffers
race
conditions
exposures
courtesy
dave
lemke
ncd
stuart
marks
sun
note
same
applies
border
pixel
pixmap
mis
feature
protocol
allows
server
free
manipulate
pixel
pixmap
requiring
server
keep
original
pixel
pixmap
potentially
lot
space
saved
courtesy
jim
fulton
mit
consortium
completely
transparent
window
easy
use
inputonly
window
order
create
window
mostly
transparent
several
choices
shape
extension
first
released
x11r4
offers
easy
way
make
non
rectangular
windows
set
shape
window
fit
areas
window
nontransparent
servers
support
extension
machine
specific
method
implementing
transparent
windows
particular
servers
use
overlay
plane
supported
hardware
note
notion
transparent
color
index
generally
portable
solution
use
large
number
tiny
windows
makes
operating
application
unit
difficult
final
answer
consider
whether
really
need
transparent
window
satisfied
being
overlay
application
window
information
draw
separate
bitplanes
colors
appear
properly
thanks
der
mouse
mouse
lightning
mcrcim
mcgill
see
journal
complete
answer
including
code
samples
last
option
using
gxxor
expect
drawing
value
black
background
black
example
produce
white
drawing
operation
work
rgb
values
colormap
indices
color
resulting
colormap
index
actually
points
undefined
visually
random
unless
actually
filled
yourself
servers
black
white
programs
taking
advantage
mathematical
coincidence
break
want
combining
colors
gxxor
allocating
number
color
cells
filling
chosen
pre
computed
values
want
use
gxxor
simply
switch
between
colors
take
shortcut
setting
background
color
graphics
context
foreground
color
value
draws
over
red
result
blue
draws
over
blue
result
red
foreground
value
itself
xor
colormap
indices
red
blue
thanks
chris
flatters
cflatter
zia
aoc
nrao
ken
whaley
whaley
spectre
dec
make
sure
using
bits
red
green
blue
fields
xcolor
structure
scaled
nothing
full
blast
forget
scale
using
example
each
color
xalloccolor
function
perform
correctly
resulting
color
usually
black
thanks
paul
asente
asente
adobe
image
processing
program
uses
xgetrgbcolormap
standard
colormap
doesn
work
xgetrgbcolormap
used
property
xa_rgb_default_map
create
standard
colormap
returns
already
exists
use
xstdcmap
order
create
standard
colormap
first
der
mouse
mouse
larry
mcrcim
mcgill
initial
contents
pixmaps
undefined
means
servers
allocate
memory
leave
around
whatever
happens
usually
garbage
probably
want
clear
pixmap
first
using
xfillrectangle
function
gxcopy
foreground
pixel
whatever
color
want
background
using
pixmap
mask
courtesy
dave
lemke
ncd
stuart
marks
sun
program
window
remote
display
want
check
whether
window
exists
before
doing
anything
asynchronous
isn
guarantee
window
still
exist
between
time
time
sent
event
window
otherwise
manipulated
send
event
without
checking
install
error
handler
catch
badwindow
errors
indicate
window
longer
exists
scheme
work
except
rare
occasion
original
window
destroyed
reallocated
another
window
courtesy
ken
lee
klee
synoptics
yes
server
assigns
ids
windows
resources
actually
server
assigns
bits
client
others
application
knows
manipulate
resource
server
resource
except
gcs
private
color
cells
shared
problem
face
disseminate
window
multiple
applications
simple
way
handle
solves
problem
applications
running
different
machines
first
application
create
specially
named
property
root
window
put
window
second
application
retrieves
property
whose
name
knows
draw
whatever
window
note
scheme
works
iff
instance
first
application
running
scheme
limitations
mentioned
question
using
window
ids
remote
displays
note
still
need
coordinate
higher
level
cooperation
applications
note
processes
share
window
try
use
same
server
connection
process
child
close
down
connection
server
open
connection
mostly
courtesy
phil
karlton
karlton
wpd
sgi
number
applications
including
xwd
xwininfo
xsetroot
handle
virtual
root
window
tvtwm
swm
use
typically
return
wrong
child
root
general
solution
add
code
use
application
normally
use
rootwindow
dpy
screen
function
name
getvroot
description
gets
root
window
virtual
root
arguments
display
screen
returns
root
window
client
include
x11
xatom
window
getvroot
dpy
scr
display
dpy
int
scr
window
rootreturn
parentreturn
children
unsigned
int
numchildren
window
root
rootwindow
dpy
scr
atom
__swm_vroot
none
int
__swm_vroot
xinternatom
dpy
__swm_vroot
false
xquerytree
dpy
root
rootreturn
parentreturn
children
numchildren
numchildren
atom
actual_type
int
actual_format
long
nitems
bytesafter
window
newroot
null
xgetwindowproperty
dpy
children
__swm_vroot
false
xa_window
actual_type
actual_format
nitems
bytesafter
unsigned
char
newroot
success
newroot
root
newroot
break
return
root
courtesy
david
elliott
dce
smsc
sony
similar
code
ssetroot
version
xsetroot
distributed
tvtwm
header
file
andreas
stolcke
icsi
export
lcs
mit
contrib
vroot
functions
similarly
providing
macros
rootwindow
defaultrootwindow
code
include
header
file
first
run
properly
presence
virtual
desktop
resizing
window
done
through
window
manager
window
managers
pay
attention
size
hints
application
places
window
guarantee
window
manager
listen
try
setting
minimum
maximum
size
hints
target
size
hope
best
antisocial
application
constantly
raise
itself
tracking
visibilitynotify
events
isn
overlapped
imagine
conflict
between
programs
running
sure
way
window
appear
top
stack
make
window
override
redirect
means
temporarily
assuming
window
management
duties
window
want
infrequently
short
periods
time
popup
menus
short
parameter
setting
windows
thanks
der
mouse
mouse
larry
mcrcim
mcgill
easy
way
unless
willing
depend
sort
extension
non
existent
arrange
blinking
yourself
redrawing
contents
periodically
possible
playing
games
colormap
changing
color
contents
thanks
mouse
larry
mcrcim
mcgill
der
mouse
users
support
translation
manager
help
notification
double
clicking
good
way
double
click
xlib
protocol
provide
enough
support
double
clicks
client
side
timeouts
unless
single
click
action
defer
actually
taking
until
next
see
event
server
thus
timeouts
means
system
dependent
code
unixish
implementations
use
xconnectionnumber
file
descriptor
connection
use
select
something
similar
note
user
interface
references
suggest
double
click
used
extend
action
indicated
single
click
case
interface
execute
first
action
compromise
check
timestamp
second
event
determine
whether
single
click
action
double
click
action
thanks
mouse
larry
mcrcim
mcgill
der
mouse
xlib
intentionally
provide
sophisticated
graphics
capabilities
leaving
server
extensions
clients
side
graphics
libraries
choice
want
stay
within
core
protocol
render
text
pixmap
read
back
via
xgetimage
rotate
hand
whatever
matrices
want
put
back
server
via
xputimage
specifically
create
bitmap
write
text
create
xybitmap
image
via
xgetimage
create
xybitmap
image
big
enough
handle
transformation
each
cos
theta
sin
theta
sin
theta
cos
theta
render
note
careful
implement
lose
bits
algorithm
based
shear
transformations
fact
better
high
level
server
extensions
graphics
packages
available
permit
rendering
rotated
text
display
postscript
pex
phigs
gks
although
capable
arbitrary
rotation
probably
use
same
fonts
found
printer
addition
enough
access
server
install
font
create
font
consists
letters
rotated
predefined
angle
application
itself
figure
placement
each
glyph
courtesy
der
mouse
mouse
larry
mcrcim
mcgill
eric
taylor
etaylor
wilkins
bmc
tmc
ken
lee
klee
synoptics
liam
quin
lee
interviews
toolkit
contrib
software
support
rendering
rotated
fonts
source
example
code
brian
smith
brsmith
umn
another
possibility
use
hershey
fonts
stroke
rendered
used
converting
xdrawline
requests
eric
pencom
xrotfont
program
alan
richardson
mppa3
syma
sussex
posted
comp
sources
july
paints
rotated
font
implementing
method
above
using
outline
hershey
font
xvertext
package
alan
richardson
mppa3
syma
sussex
set
functions
facilitate
writing
text
angle
version
recently
released
alt
sources
comp
sources
misc
export
contrib
xvertext
shar
reilly
resource
volume
includes
information
modifications
fonts
server
provide
rotated
scaled
text
places
toolkit
applications
protocol
define
use
string
names
context
conflicts
possible
different
components
use
same
name
different
things
mit
consortium
maintains
registry
names
domains
orgainization
names
selection
names
selection
targets
resource
types
application
classes
class
extension
record
types
several
others
list
directory
mit
doc
registry
tape
available
sending
send
docs
registry
xstuff
mail
server
register
names
first
come
first
served
ask
questions
send
xregistry
expo
lcs
mit
sure
include
postal
address
confirmation
condensed
asente
swick
appendix
david
lewis
faq
craft
uunet
faqs
joe
friday
david
lewis
temporarily
speaking
visual
inc
day
dbl
visual
evening
david
craft
uunet
