hello
hope
somebody
here
help
currently
working
project
trying
communicate
ibm
phoenix
bios
using
board
made
intel
cpu
uart
chip
board
works
fine
transmit
command
terminal
emulation
mode
kermit
seems
something
wrong
initialization
protocol
used
try
need
access
unit
built
using
sizable
chunk
code
using
perform
calculations
operations
difficult
code
assembly
language
included
assembly
code
running
code
trying
use
anyone
show
something
doing
blatantly
incorrectly
missing
lack
knowledge
serial
communications
please
mail
check
against
0x20
character
0x20
received
leds
indicate
programs
written
nothing
set
port
send
0x20
character
uses
bioscom
function
bios
uses
software
interrupt
int86
function
dos
triple
checked
baud
rate
parity
none
stop
bits
character
length
bits
interrupt
calls
0x14
currently
loss
wrong
hardware
gurus
want
comment
thanks
alot
hubert
jesus
dejesus
eniac
seas
upenn
intel
asm
command
equ
3000h
command
register
porta
equ
3001h
port
timerlo
equ
3004h
high
bits
timer
timerhi
equ
3005h
low
bits
timer
uartdata
equ
e000h
uart
data
register
uartcmd
equ
e001h
uart
command
register
4000h
sram
location
mvi
08h
set
low
timer
bits
sta
timerlo
mvi
40h
set
high
timer
bits
sta
timerhi
mvi
11111101b
start
timer
enable
port
sta
command
mvi
11h
display
segment
leds
sta
porta
mvi
00h
clear
uart
command
sta
uartcmd
sta
uartcmd
sta
uartcmd
mvi
01000000b
internally
reset
uart
sta
uartcmd
lda
uartdata
remove
extraneous
data
mvi
01001111b
init
uart
data
bits
sta
uartcmd
parity
stop
bit
64x
async
mvi
00100111b
enable
transmit
receive
sta
uartcmd
init
lda
uartcmd
read
status
register
ani
02h
rxrdy
init
loop
lda
uartdata
read
data
character
cpi
character
0x20
jnz
init
loop
mvi
22h
character
received
sta
porta
display
segment
leds
hlt
end
using
bioscom
include
stdio
include
stdlib
include
bios
define
init
define
send
define
receive
define
status
define
com2
void
main
char
abyte
abyte
0xa3
bioscom
init
abyte
com2
printf
initialized
comm
port
bioscom
status
com2
0x4000
abyte
bioscom
send
abyte
com2
printf
sent
start
character
using
int86
include
stdio
include
stdlib
include
dos
include
bios
main
union
regs
registers
registers
0x00
registers
0xa7
registers
0x01
int86
0x14
registers
registers
printf
com2
initialized
registers
0x01
registers
0x20
registers
0x01
int86
0x14
registers
registers
printf
sent
start
character
