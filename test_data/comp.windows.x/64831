enclosed
rules
guidelines
related
information
10th
international
obfuscated
code
contest
part
part
shar
file
enjoy
chongo
landon
curt
noll
larry
bassel
bin
part
multipart
archive
mkentry
echo
extracting
mkentry
text
sed
shar_eof
mkentry
mkentry
copyright
landon
curt
noll
larry
bassel
rights
reserved
permission
personal
education
non
profit
use
granted
provided
copyright
notice
included
entirety
remains
unaltered
uses
receive
prior
permission
writing
both
landon
curt
noll
larry
bassel
mkentry
make
international
obfuscated
code
contest
entry
usage
mkentry
remarks
build
prog
ioccc
entry
remarks
file
remarks
entry
build
file
containing
prog
built
prog
obfuscated
program
source
file
ioccc
entry
ioccc
entry
output
file
compile
mkentry
mkentry
placed
public
domain
landon
curt
noll
software
provided
without
express
implied
warranties
including
without
limitation
implied
warranties
merchantability
fitness
particular
purpose
warning
program
attempts
implement
ioccc
rules
attempt
made
make
sure
program
produces
entry
conforms
contest
rules
cases
program
differs
contest
rules
contest
rules
used
sure
check
contest
rules
before
submitting
entry
send
questions
comments
entries
contest
sun
pacbell
uunet
pyramid
hoptoad
judges
judges
toad
rules
guidelines
change
year
year
sure
current
rules
guidelines
prior
submitting
entries
obtain
send
email
address
above
use
send
rules
contest
rules
change
year
year
use
program
year
intended
sure
rule_year
define
below
matches
current
year
include
stdio
include
ctype
include
time
include
sys
types
include
sys
stat
logic
ifndef
true
define
true
endif
true
ifndef
false
define
false
endif
false
define
eof_ok
true
define
eof_not_ok
false
global
limits
define
rule_year
note
match
current
year
define
start_date
1mar92
utc
first
confirmation
received
define
max_col
max
column
line
hit
define
max_build_size
max
build
size
define
max_program_size
max
program
source
size
define
max_program_size2
max
program
source
size
counting
whitespace
followed
whitespace
eof
define
max_title_len
max
chars
title
define
max_entry_len
max
length
entry
input
line
define
max_entry
max
number
entries
per
person
per
year
define
max_file_len
max
filename
length
info
file
send
entries
define
entry_addr1
apple
pyramid
sun
uunet
hoptoad
obfuscate
define
entry_addr2
obfuscate
toad
uuencode
process
assumes
ascii
define
uuencode
encode_str
int
0xff
define
uuencode_len
max
uuencode
chunk
size
define
uuinfo_mode
mode
info
file
uuencode
file
define
uubuild_mode
mode
build
file
uuencode
file
define
uubuild_name
build
name
build
file
uuencode
file
define
uuprog_mode
mode
program
uuencode
file
define
uuprog_name
prog
name
program
uuencode
file
encode_str
char
val
uuencoded
character
val
xchar
encode_str
abcdefghijklmnopqrstuvwxyz
abcdefghijklmnopqrstuvwxyz
abcdefghijklmnopqrstuvwxyz
abcdefghijklmnopqrstuvwxyz
global
declarations
xchar
program
name
xlong
start_time
startup
time
forward
declarations
xvoid
parse_args
xvoid
usage
xfile
open_remark
xfile
open_build
xfile
open_program
xfile
open_output
xvoid
output_entry
xvoid
output_remark
xvoid
output_author
xvoid
output_info
xvoid
output_build
xvoid
output_program
xvoid
output_end
xint
get_line
xvoid
output_till_dot
xint
col_len
xvoid
check_io
xvoid
uuencode
xmain
argc
argv
int
argc
arg
count
char
argv
args
file
remark
null
open
remarks
stream
file
build
null
open
build
file
stream
file
prog
null
open
program
stream
file
output
null
open
output
stream
char
rname
null
file
remarks
entry
char
bname
null
file
containing
prog
built
char
pname
null
obfuscated
program
source
file
char
oname
null
ioccc
entry
output
file
struct
startup
time
structure
check
year
start_time
time
long
gmtime
start_time
tm_year
rule_year
fprintf
stderr
warning
program
applies
differ
argv
rule_year
tm_year
parse
command
line
args
parse_args
argc
argv
rname
bname
pname
oname
open
check
input
output
files
open
truncate
output
file
first
case
same
input
files
output
open_output
oname
remark
open_remark
rname
build
open_build
bname
prog
open_program
pname
output
null
remark
null
build
null
prog
null
exit
output
each
section
output_entry
output
oname
output_remark
output
oname
remark
rname
output_author
output
oname
output_info
output
oname
output_build
output
oname
build
bname
output_program
output
oname
prog
pname
output_end
output
oname
flush
output
fflush
output
eof
fprintf
stderr
flush
error
program
oname
perror
exit
final
words
printf
nyour
entry
found
check
file
oname
printf
correct
problems
verify
uudecode
utility
printf
correctly
decode
build
file
program
printf
program
provided
guide
submitters
printf
cases
conflicts
rules
rules
shall
apply
printf
responsibility
ensure
entry
conforms
printf
current
rules
printf
email
entries
printf
entry_addr1
printf
entry_addr2
printf
please
use
following
email
entry
printf
tioccc
entry
done
exit
parse_args
parse
command
line
args
given
command
line
args
function
parses
sets
required
name
flags
function
return
command
line
syntax
correct
xvoid
xparse_args
argc
argv
rname
bname
pname
oname
int
argc
arg
count
char
argv
args
char
rname
file
remarks
entry
char
bname
file
containing
prog
built
char
pname
obfuscated
program
source
file
char
oname
ioccc
entry
output
file
char
optarg
flag
option
operand
int
flagname
name
flag
int
everyone
getopt
parse
args
hand
program
argv
argc
determine
flagname
argv
usage
notreached
flagname
int
argv
determine
flag
operand
flagname
argv
optarg
argv
argc
usage
notreached
optarg
argv
save
flag
operand
correct
global
variable
switch
flagname
case
rname
optarg
break
case
bname
optarg
break
case
pname
optarg
break
case
oname
optarg
break
default
usage
notreached
verify
required
flags
rname
null
bname
null
pname
null
oname
null
usage
notreached
return
usage
print
usage
exit
function
return
xvoid
xusage
exitval
int
exitval
exit
value
fprintf
stderr
usage
remarks
build
prog
ioccc
entry
program
fprintf
stderr
remarks
tfile
remarks
entry
fprintf
stderr
build
tfile
containing
prog
built
fprintf
stderr
prog
tthe
obfuscated
program
source
file
fprintf
stderr
ioccc
entry
tioccc
entry
output
file
exit
exitval
open_remark
open
check
remark
file
remark
file
indented
spaces
extend
beyond
column
max_col
requirements
warn
function
returns
null
format
error
xfile
xopen_remark
filename
char
filename
file
stream
opened
file
stream
char
buf
bufsiz
input
buffer
int
toolong
number
long
int
non_indent
number
indented
spaces
open
remark
input
file
stream
fopen
filename
stream
null
fprintf
stderr
open
remark
file
program
filename
perror
return
null
look
each
line
fgets
buf
bufsiz
stream
null
count
start
spaces
buf
strncmp
buf
non_indent
count
long
col_len
buf
max_col
found
line
long
toolong
watch
errors
check_io
stream
filename
eof_ok
note
long
needed
toolong
fprintf
stderr
warning
line
extend
beyond
80th
column
program
toolong
filename
fprintf
stderr
nice
avoid
program
note
non
indented
needed
non_indent
fprintf
stderr
warning
line
indented
spaces
program
non_indent
filename
fprintf
stderr
nice
avoid
program
return
open
file
rewind
stream
return
stream
open_build
open
check
build
file
build
file
longer
max_build_size
bytes
function
returns
null
size
error
xfile
xopen_build
filename
char
filename
file
stream
opened
file
stream
struct
stat
statbuf
status
open
file
open
build
input
file
stream
fopen
filename
stream
null
fprintf
stderr
open
build
file
program
filename
perror
return
null
determine
size
file
fstat
fileno
stream
statbuf
fprintf
stderr
stat
build
file
program
filename
perror
return
null
statbuf
st_size
max_build_size
fprintf
stderr
fatal
build
file
bytes
long
program
filename
statbuf
st_size
fprintf
stderr
longer
bytes
program
max_build_size
return
null
return
open
file
return
stream
open_program
open
check
program
source
file
program
source
file
bytes
number
non
whitespace
chars
followed
whitespace
bytes
function
returns
null
size
error
xfile
xopen_program
filename
char
filename
file
stream
opened
file
stream
struct
stat
statbuf
status
open
file
int
count
special
count
size
int
character
read
open
program
source
input
file
stream
fopen
filename
stream
null
fprintf
stderr
open
program
source
file
program
filename
perror
exit
determine
size
file
fstat
fileno
stream
statbuf
fprintf
stderr
stat
program
source
file
program
filename
perror
return
null
statbuf
st_size
max_program_size
fprintf
stderr
fatal
program
source
file
bytes
long
program
filename
statbuf
st_size
fprintf
stderr
longer
bytes
program
max_program_size
return
null
count
non
whitespace
non
followed
whitespace
chars
count
fgetc
stream
eof
look
non
whitespace
isascii
isspace
switch
case
count
followed
eof
whitespace
case
case
peek
next
char
fgetc
stream
eof
isascii
isspace
followed
whitespace
eof
count
ungetc
stream
count
break
default
count
break
watch
errors
check_io
stream
filename
eof_ok
look
special
size
count
max_program_size2
fprintf
stderr
fatal
number
bytes
non
whitespace
program
fprintf
stderr
followed
whitespace
program
fprintf
stderr
eof
bytes
program
max_program_size2
fprintf
stderr
bytes
found
program
filename
count
return
null
return
open
file
rewind
stream
return
stream
open_output
open
check
entry
output
file
function
returns
null
open
error
xfile
xopen_output
filename
char
filename
file
stream
opened
file
stream
open
ioccc
entry
output
file
stream
fopen
filename
stream
null
fprintf
stderr
open
ioccc
entry
file
output
program
filename
perror
exit
return
open
file
return
stream
output_entry
output
entry
section
read
needed
information
form
stdin
write
entry
section
xvoid
xoutput_entry
output
oname
file
output
entry
output
file
stream
char
oname
name
output
file
char
title
max_title_len
entry
title
char
buf
max_col
buffer
int
entry
entry
number
int
ret
fields
processed
fscanf
int
ok_line
line
char
skip
input
skip
file
date_pipe
pipe
command
time_t
epoch_sec
seconds
epoch
char
write
start
section
fprintf
output
entry
check_io
output
oname
eof_not_ok
write
rule
year
fprintf
output
rule
rule_year
check_io
output
oname
eof_not_ok
determine
fix
printf
fix
update
resubmittion
printf
previous
entry
enter
get_line
buf
buf
buf
printf
nplease
answer
buf
fprintf
output
fix
check_io
output
oname
eof_not_ok
printf
nbe
sure
title
entry
number
give
printf
same
entry
replacing
fprintf
output
fix
check_io
output
oname
eof_not_ok
write
title
printf
nyour
title
match
expression
character
printf
followed
characters
max_title_len
printf
suggested
required
title
printf
incorporate
username
printf
case
multiple
authors
consider
using
parts
usernames
printf
authors
printf
enter
title
prompt
read
line
ok_line
get_line
title
max_title_len
max_col
printf
ntitle
long
please
enter
continue
verify
pattern
everyone
regexp
hand
isascii
int
title
isalnum
int
title
title
title
printf
ninvalid
first
character
title
printf
enter
title
ok_line
title
isascii
int
isalnum
int
printf
ninvalid
character
title
printf
enter
title
ok_line
ok_line
fprintf
output
title
title
check_io
output
oname
eof_not_ok
write
entry
number
printf
neach
person
submit
entries
per
year
max_entry
printf
enter
entry
number
inclusive
max_entry
valid
input
line
fflush
stdout
ret
fscanf
stdin
entry
check_io
stdin
stdin
eof_not_ok
skip
over
input
until
newline
found
skip
fgetc
stdin
check_io
stdin
stdin
eof_not_ok
skip
bad
text
input
invalidate
entry
number
entry
skip
check
number
range
ret
entry
entry
max_entry
printf
nthe
entry
number
between
inclusive
max_entry
printf
enter
entry
number
ret
entry
entry
max_entry
fprintf
output
entry
entry
check_io
output
oname
eof_not_ok
write
submission
returns
newline
epoch_sec
time
null
fprintf
output
asctime
gmtime
epoch_sec
check_io
output
oname
eof_not_ok
write
machine
host
information
printf
nenter
machine
under
entry
tested
output_till_dot
output
oname
host
output_remark
output
remark
section
read
needed
information
form
stdin
write
entry
section
xvoid
xoutput_remark
output
oname
remark
rname
file
output
entry
output
file
stream
char
oname
name
output
file
file
remark
stream
file
containing
remark
text
char
rname
name
remark
file
char
buf
bufsiz
input
output
buffer
write
start
section
fprintf
output
remark
check_io
output
oname
eof_not_ok
copy
remark
file
section
fgets
buf
bufsiz
remark
null
fputs
buf
output
check_io
output
oname
eof_not_ok
check_io
remark
rname
eof_ok
sure
remark
section
ends
newline
buf
strlen
buf
fputc
output
check_io
output
oname
eof_not_ok
output_author
output
author
section
read
needed
information
stdin
write
author
section
multiple
authors
exist
multiple
author
sections
written
xvoid
xoutput_author
output
oname
file
output
entry
output
file
stream
char
oname
name
output
file
char
buf
max_col
buffer
int
more_auths
true
authors
note
int
auth_cnt
number
authors
processed
prompt
user
author
section
printf
nenter
information
each
author
entry
printf
before
contest
deadline
judges
start_date
printf
attempt
email
back
confirmation
first
author
place
author
information
each
author
individual
section
write
start
section
fprintf
output
author
check_io
output
oname
eof_not_ok
write
author
printf
nauthor
name
auth_cnt
get_line
buf
max_col
max_col
printf
nname
long
please
enter
fprintf
output
name
buf
check_io
output
oname
eof_not_ok
write
printf
nenter
school
company
author
auth_cnt
printf
nauthor
auth_cnt
get_line
buf
max_col
max_col
printf
nline
long
please
enter
fprintf
output
buf
check_io
output
oname
eof_not_ok
write
address
printf
nenter
postal
address
author
sure
include
auth_cnt
printf
country
include
name
output_till_dot
output
oname
addr
write
email
address
printf
nenter
email
address
author
use
address
auth_cnt
printf
registered
domain
well
known
site
give
several
printf
forms
list
per
line
output_till_dot
output
oname
email
write
anonymous
status
printf
nshould
author
remain
anonymous
enter
auth_cnt
get_line
buf
buf
buf
printf
nplease
answer
fprintf
output
anon
buf
check_io
output
oname
eof_not_ok
determine
another
author
printf
nis
another
author
enter
get_line
buf
buf
buf
printf
nplease
answer
buf
more_auths
true
more_auths
false
more_auths
true
return
output_info
output
info
section
read
needed
information
stdin
write
info
section
multiple
info
files
exist
multiple
info
sections
written
xvoid
xoutput_info
output
oname
file
output
entry
output
file
stream
char
oname
name
output
file
char
infoname
max_file_len
filename
buffer
char
yorn
answer
char
uuname
name
uuencode
file
infile
info
file
stream
prompt
user
info
information
printf
ninfo
files
used
supplement
entry
printf
example
info
files
provide
sample
input
detailed
printf
information
entry
supplemental
printf
entry
require
exist
another
info
file
save
uuencode
printf
info
file
include
enter
get_line
yorn
yorn
yorn
printf
nplease
answer
yorn
read
filename
printf
nenter
info
filename
get_line
infoname
max_file_len
printf
ninfo
filename
long
please
enter
compute
basename
info
filename
remove
trailing
newline
uuname
infoname
strlen
infoname
uuname
avoid
rindex
shrrchr
compat
issues
hand
uuname
uuname
infoname
uuname
uuname
uuname
break
attempt
open
info
file
infile
fopen
infoname
infile
null
fprintf
stderr
open
info
file
program
infoname
perror
continue
write
start
section
fprintf
output
info
check_io
output
oname
eof_not_ok
uuencode
info
file
uuencode
output
oname
infile
infoname
uuinfo_mode
uuname
printf
ndo
another
info
file
include
enter
get_line
yorn
yorn
yorn
printf
nplease
answer
return
output_build
output
build
section
read
needed
information
stdin
write
build
section
xvoid
xoutput_build
output
oname
build
bname
file
output
entry
output
file
stream
char
oname
name
output
file
file
build
open
build
file
stream
char
bname
name
build
file
write
start
section
fprintf
output
build
check_io
output
oname
eof_not_ok
uuencode
program
file
uuencode
output
oname
build
bname
uubuild_mode
uubuild_name
return
output_program
output
program
section
read
needed
information
form
stdin
write
program
section
xvoid
xoutput_program
output
oname
prog
pname
file
output
entry
output
file
stream
char
oname
name
output
file
file
prog
open
program
stream
char
pname
name
program
file
write
start
section
fprintf
output
program
check_io
output
oname
eof_not_ok
uuencode
program
file
uuencode
output
oname
prog
pname
uuprog_mode
uuprog_name
return
output_end
output
end
section
read
needed
information
form
stdin
write
end
section
xvoid
xoutput_end
output
oname
file
output
entry
output
file
stream
char
oname
name
output
file
write
final
section
terminator
fprintf
output
end
check_io
output
oname
eof_not_ok
return
get_line
answer
stdin
function
flush
stdout
case
prompt
pending
read
answer
function
returns
line
long
length
line
including
newline
line
function
return
error
eof
xint
xget_line
buf
siz
maxcol
char
buf
input
buffer
int
siz
length
input
including
newline
int
maxcol
max
col
allowed
disable
check
int
length
length
input
line
flush
terminal
output
fflush
stdout
read
line
fgets
buf
siz
stdin
null
report
problem
check_io
stdin
stdin
eof_not_ok
look
newline
length
strlen
buf
buf
length
int
eatchar
char
being
eaten
newline
found
line
long
eat
rest
line
eatchar
fgetc
stdin
eatchar
eof
eatchar
check_io
stdin
stdin
eof_not_ok
report
situation
return
watch
long
needed
maxcol
length
maxcol
col_len
buf
maxcol
report
situation
return
return
length
return
length
output_till_dot
output
set
until
itself
read
routine
read
set
until
including
single
line
read
format
output
leader
tfirst
line
tnext
line
tnext
line
routine
return
error
eof
xvoid
xoutput_till_dot
output
oname
leader
file
output
entry
output
file
stream
char
oname
name
output
file
char
leader
lead
text
first
line
char
buf
bufsiz
input
buffer
int
count
read
int
done
false
true
finished
reading
input
instruct
user
input
printf
nto
end
input
enter
line
single
period
read
until
eof
count
done
issue
prompt
printf
count
leader
fflush
stdout
line
get_line
buf
bufsiz
max_col
printf
nline
long
please
enter
continue
note
read
strcmp
buf
done
true
write
line
read
something
done
fprintf
output
count
leader
buf
check_io
output
oname
eof_not_ok
read
output
something
count
fprintf
output
leader
check_io
output
oname
eof_not_ok
return
col_len
determine
highest
string
reach
given
string
routine
returns
string
reach
string
printed
column
tab
stops
assumed
start
xint
xcol_len
string
char
string
string
examine
int
col
current
column
char
current
char
scan
string
col
string
note
column
shift
col
col
col
col
return
highest
column
return
col
check_io
check
eof
error
stream
return
eof
error
xvoid
xcheck_io
stream
name
eof_ok
file
stream
stream
check
char
name
name
stream
int
eof_ok
eof_ok
eof_not_ok
test
error
ferror
stream
fprintf
stderr
error
program
name
perror
exit
test
eof
eof_ok
eof_not_ok
feof
stream
fprintf
stderr
eof
program
name
exit
return
uuencode
uuencode
file
perform
uuencoding
process
identical
process
performed
uuencode
utility
routine
implements
algorithm
described
uuencode
3bsd
reno
man
page
xvoid
xuuencode
output
oname
infile
iname
umode
uname
file
output
output
file
stream
char
oname
output
filename
file
infile
input
file
stream
char
iname
input
filename
int
umode
mode
put
uuencode
file
char
uname
name
put
uuencode
file
char
buf
uuencode_len
uuencode
buffer
int
read_len
actual
number
chars
read
int
val
bit
chunk
buf
char
filler
filler
uuencode
pad
text
char
output
initial
uuencode
header
fprintf
output
begin
umode
uname
check_io
output
oname
eof_not_ok
clear
input
buffer
buf
buf
sizeof
buf
sizeof
buf
process
uuencode_len
chars
time
forming
single
output
line
each
time
read_len
fread
buf
sizeof
buf
uuencode_len
infile
first
character
length
character
fputc
uuencode
read_len
output
check_io
output
oname
eof_not_ok
convert
bits
time
thus
convert
sets
bits
sets
uuencoded
bits
buf
read_len
read_len
bits
val
0x3f
fputc
uuencode
val
output
check_io
output
oname
eof_not_ok
bits
val
0x30
0x0f
fputc
uuencode
val
output
check_io
output
oname
eof_not_ok
bits
val
0x3c
0x03
fputc
uuencode
val
output
check_io
output
oname
eof_not_ok
bits
val
0x3f
fputc
uuencode
val
output
check_io
output
oname
eof_not_ok
end
uuencode_len
line
fputc
output
check_io
output
oname
eof_not_ok
clear
input
buffer
depend
bzero
memset
buf
buf
sizeof
buf
sizeof
buf
check
last
read
input
file
check_io
infile
iname
eof_ok
write
end
uuencode
file
fprintf
output
nend
uuencode
filler
check_io
output
oname
eof_not_ok
shar_eof
chmod
mkentry
echo
restore
mkentry
failed
set
mkentry
wc_c
test
wc_c
echo
original
size
current
size
wc_c
obfuscate
info
echo
extracting
obfuscate
info
text
sed
shar_eof
obfuscate
info
x1993
obfuscated
contest
information
xcopyright
landon
curt
noll
larry
bassel
xall
rights
reserved
permission
personal
education
non
profit
use
xgranted
provided
copyright
notice
included
entirety
xand
remains
unaltered
uses
receive
prior
permission
writing
xfrom
both
landon
curt
noll
larry
bassel
xthe
international
obfuscated
code
contest
ioccc
sprit
xco
operation
willing
mention
programming
contents
space
xpermits
xhow
contest
included
file
wish
ioccc
judges
include
contest
file
send
request
judges
toad
request
contest
descriptions
limited
exceed
bytes
typically
request
contest
include
current
description
ioccc
order
included
file
given
year
receive
current
description
earlier
jan
utc
later
feb
utc
agreement
publish
contest
obtained
prior
feb
annual
contests
fail
submit
new
entry
dropped
file
contents
noted
below
ioccc
affiliated
ioccc
endorsed
ioccc
reserve
right
refuse
print
information
given
contest
information
below
provided
particular
contest
organizer
printed
permission
please
contact
contest
organizer
directly
regarding
contents
xwith
official
notice
given
present
enjoyment
following
xinformation
contents
10th
international
obfuscated
contest
original
obfuscated
contest
obfuscate
cated
cating
cates
render
obscure
darken
confuse
emotions
obfuscated
judgment
llat
obfuscare
darken
intensive
lat
fuscare
darken
fuscus
dark
obfuscation
obfuscatory
adj
goals
contest
write
obscure
obfuscated
program
under
rules
below
show
importance
programming
style
ironic
way
stress
compilers
unusual
code
illustrate
subtleties
language
provide
safe
forum
poor
code
ioccc
grandfather
usenet
programming
contests
contest
demonstrated
program
mearly
works
correctly
sufficient
ioccc
done
add
arcane
word
obfuscated
back
english
language
see
new
hacker
dictionary
eric
raymond
strongly
encouraged
read
new
contest
rules
before
sending
entries
rules
sometimes
contest
email
address
itself
change
over
time
valid
entry
year
rejected
later
year
due
changes
rules
typical
start
contests
early
march
contest
rules
normally
finalized
posted
until
beginning
contest
typical
closing
contests
early
contest
rules
posted
comp
unix
wizards
comp
lang
misc
misc
alt
sources
comp
sources
access
groups
missed
early
march
posting
request
copy
judges
via
email
judges
toad
sun
uunet
utzoo
pyramid
hoptoad
judges
previous
contest
winners
available
via
anonymous
ftp
ftp
under
directory
pub
ioccc
0th
international
obfuscated
perl
contest
landon
noll
larry
wall
content
being
planned
someday
landon
larry
busy
actually
around
posting
first
set
rules
landon
yes
know
contest
existing
projects
way
hopefully
something
developed
nov
2nd
international
obfuscated
postscript
contest
jonathan
monsarrat
jgm
brown
alena
lacova
alena
nikhef
contest
programming
skills
knowledge
exclusively
postscript
programming
language
purpose
spread
knowledge
postscript
details
applaud
those
best
tricks
prove
humans
beat
those
damnable
machine
generators
game
writing
obscure
mysterious
postscript
programs
winners
receive
fame
attention
goes
having
program
entry
posted
winner
programmers
world
wide
contest
rules
results
available
ftp
wilma
brown
pub
postscript
obfuscated
shar
individually
obfuscated
directory
judges
post
rules
november
comp
lang
postscript
usenet
places
send
questions
jgm
brown
categories
include
best
obfuscated
postscript
best
artwork
compact
best
interactive
program
useful
anything
unusual
creative
deserves
award
judges
choose
winners
each
category
alena
lacova
system
administrator
nikhef
institute
high
energy
nuclear
physics
netherlands
author
postscript
chaos
programs
draw
julia
sets
mandelbrot
sets
kinds
fractal
functions
jonathan
monsarrat
graduate
student
mit
brown
faq
maintainer
usenet
newsgroup
comp
lang
postscript
author
postscript
zone
lametex
shar_eof
chmod
obfuscate
info
echo
restore
obfuscate
info
failed
set
obfuscate
info
wc_c
test
wc_c
echo
original
size
current
size
wc_c
exit
sunnyvale
residents
vote
landon
noll
sunnyvale
city
council
seat
